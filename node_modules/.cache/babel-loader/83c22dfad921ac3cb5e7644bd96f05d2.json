{"remainingRequest":"/Users/ohirashunpei/project/sakura-front/node_modules/babel-loader/lib/index.js!/Users/ohirashunpei/project/sakura-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ohirashunpei/project/sakura-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ohirashunpei/project/sakura-front/src/views/Sending.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ohirashunpei/project/sakura-front/src/views/Sending.vue","mtime":1625392535753},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9vaGlyYXNodW5wZWkvcHJvamVjdC9zYWt1cmEtZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAnQC9hcGkvaW5kZXgnOwp2YXIgamFwYW5lc2VUaW1lID0gJyc7CnZhciBqYXBhbmVzZVRpbWUyID0gJyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWVzc2FnZXM6IFtdLAogICAgICBkaWFsb2c6IGZhbHNlLAogICAgICByYWlsc1VSTDogImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMCIsCiAgICAgIHVzZXJfbmFtZXM6IFtdLAogICAgICB1c2VyczogW10sCiAgICAgIGF2YXRhcl91cmxzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHt9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MoKS5nZXQoJy9zZW5kaW5nLycsIHsKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgJ2FjY2Vzcy10b2tlbic6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2Nlc3MtdG9rZW4nKSwKICAgICAgICAgICAgICAgICAgdWlkOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndWlkJyksCiAgICAgICAgICAgICAgICAgIGNsaWVudDogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NsaWVudCcpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhyZXNwb25zZSksIF90aGlzLm1lc3NhZ2VzID0gcmVzcG9uc2UuZGF0YS5tZXNzYWdlcywgX3RoaXMubWVzc2FnZXMuZm9yRWFjaChmdW5jdGlvbiAobWVzc2FnZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gamFwYW5lc2VUaW1lID0gbmV3IERhdGUobWVzc2FnZS50aW1lICogMTAwMCksIG1lc3NhZ2UudGltZSA9IGphcGFuZXNlVGltZS5nZXRGdWxsWWVhcigpICsgJy8nICsgKCcwJyArIChqYXBhbmVzZVRpbWUuZ2V0TW9udGgoKSArIDEpKS5zbGljZSgtMikgKyAnLycgKyAoJzAnICsgamFwYW5lc2VUaW1lLmdldERhdGUoKSkuc2xpY2UoLTIpICsgJyAnICsgKCcwJyArIGphcGFuZXNlVGltZS5nZXRIb3VycygpKS5zbGljZSgtMikgKyAnOicgKyAoJzAnICsgamFwYW5lc2VUaW1lLmdldE1pbnV0ZXMoKSkuc2xpY2UoLTIpLCBqYXBhbmVzZVRpbWUyID0gbmV3IERhdGUobWVzc2FnZS5jcmVhdGVkX3RpbWUgKiAxMDAwKSwgbWVzc2FnZS5jcmVhdGVkX3RpbWUgPSBqYXBhbmVzZVRpbWUyLmdldEZ1bGxZZWFyKCkgKyAnLycgKyAoJzAnICsgKGphcGFuZXNlVGltZTIuZ2V0TW9udGgoKSArIDEpKS5zbGljZSgtMikgKyAnLycgKyAoJzAnICsgamFwYW5lc2VUaW1lMi5nZXREYXRlKCkpLnNsaWNlKC0yKSArICcgJyArICgnMCcgKyBqYXBhbmVzZVRpbWUyLmdldEhvdXJzKCkpLnNsaWNlKC0yKSArICc6JyArICgnMCcgKyBqYXBhbmVzZVRpbWUyLmdldE1pbnV0ZXMoKSkuc2xpY2UoLTIpOwogICAgICAgICAgICAgICAgfSksIF90aGlzLnVzZXJzID0gcmVzcG9uc2UuZGF0YS51c2VyczsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBfdGhpcy51c2Vycy5mb3JFYWNoKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MoKS5nZXQoJ3VzZXJzLycgKyB1c2VyLmlkLCB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnYWNjZXNzLXRva2VuJzogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FjY2Vzcy10b2tlbicpLAogICAgICAgICAgICAgICAgICAgIHVpZDogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VpZCcpLAogICAgICAgICAgICAgICAgICAgIGNsaWVudDogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NsaWVudCcpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy51c2VyX25hbWVzLnB1c2gocmVzcG9uc2UuZGF0YS5uYW1lKSwgX3RoaXMuYXZhdGFyX3VybHMucHVzaChyZXNwb25zZS5kYXRhLmF2YXRhcl91cmwpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["Sending.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-container>\n        <v-list-item\n            v-for=\"(message, index) in messages\"\n            :key=\"message.time\"\n        >\n            <v-card\n                height=\"100\"\n                width=\"200\"\n            >\n                <v-row>\n                    <v-col cols='3'>\n                        <v-avatar> \n                            <img\n                            :src=\"railsURL + avatar_urls[index]\"\n                            >\n                        </v-avatar> \n                    </v-col>\n                    <v-col cols='9'>\n                    {{user_names[index]}}さんからメッセージが届きます\n                    </v-col>\n                </v-row>\n            </v-card>\n        </v-list-item>\n    </v-container>\n</template>\n\n<script>\nimport axios from '@/api/index'\n\nvar japaneseTime = ''\nvar japaneseTime2 = ''\n\nexport default {\n    data: () => ({\n      messages: [],\n      dialog: false,\n      railsURL: \"http://localhost:3000\",\n      user_names: [],\n      users: [],\n      avatar_urls: [],\n    }),\n    methods: {\n       \n    },\n    async mounted() {\n      await axios()\n        .get('/sending/' ,{\n          headers: {\n            'access-token': localStorage.getItem('access-token'),\n              uid: localStorage.getItem('uid'),\n              client: localStorage.getItem('client'),\n          },\n        },\n        )\n        .then(response => (\n          console.log(response),\n          this.messages = response.data.messages,\n          this.messages.forEach(message =>\n            (\n            japaneseTime = new Date(message.time * 1000),\n            message.time = japaneseTime.getFullYear()\n            + '/' + ('0' + (japaneseTime.getMonth() + 1)).slice(-2)\n            + '/' + ('0' + japaneseTime.getDate()).slice(-2)\n            + ' ' + ('0' + japaneseTime.getHours()).slice(-2)\n            + ':' + ('0' + japaneseTime.getMinutes()).slice(-2),\n            japaneseTime2 = new Date(message.created_time * 1000),\n            message.created_time = japaneseTime2.getFullYear()\n                + '/' + ('0' + (japaneseTime2.getMonth() + 1)).slice(-2)\n                + '/' + ('0' + japaneseTime2.getDate()).slice(-2)\n                + ' ' + ('0' + japaneseTime2.getHours()).slice(-2)\n                + ':' + ('0' + japaneseTime2.getMinutes()).slice(-2)\n          )),\n          this.users = response.data.users\n        ));\n        this.users.forEach(user =>\n          axios()\n            .get('users/' + user.id ,{\n              headers: {\n                'access-token': localStorage.getItem('access-token'),\n                  uid: localStorage.getItem('uid'),\n                  client: localStorage.getItem('client'),\n              },\n            }).then(response=> (\n                this.user_names.push(response.data.name),\n                this.avatar_urls.push(response.data.avatar_url)\n            ))    \n        );\n    }\n  }\n\n</script>\n"],"sourceRoot":"src/views"}]}