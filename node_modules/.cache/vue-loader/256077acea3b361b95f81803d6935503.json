{"remainingRequest":"/Users/ohirashunpei/project/sakura-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ohirashunpei/project/sakura-front/src/views/Login.vue?vue&type=style&index=0&id=26084dc2&lang=scss&scoped=true&","dependencies":[{"path":"/Users/ohirashunpei/project/sakura-front/src/views/Login.vue","mtime":1625804804213},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5sb2dpbiB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCJ+QC9hc3NldHMvYmFjay9sb2dpbi5wbmciKTsKICBiYWNrZ3JvdW5kLXNpemU6IDk1JSA5NSU7CiAgZm9udC1mYW1pbHk6ICJBcmlhbCBSb3VuZGVkIE1UIEJvbGQiLCAiSGVsdmV0aWNhIFJvdW5kZWQiLCBBcmlhbCwgc2Fucy1zZXJpZjsKICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwogIC8vIGRpc3BsYXk6IGJsb2NrOwogIC8vIGZvbnQtc2l6ZTogOTJweDsKICAvLyBjb2xvcjogI2YxZWJlNTsKICAvLyB0ZXh0LXNoYWRvdzogMCA4cHggOXB4ICNjNGI1OWQsIDBweCAtMnB4IDFweCAjZmZmOwogIC8vIGZvbnQtd2VpZ2h0OiBib2xkOwogIC8vIGxldHRlci1zcGFjaW5nOiAtNHB4OwogIC8vIHRleHQtYWxpZ246IGNlbnRlcjsKICAvLyBwb3NpdGlvbjogYWJzb2x1dGU7CiAgLy8gcGFkZGluZzogMzAwcHggMzAwcHg7CiAgLy8gdG9wOiAxNSU7CiAgLy8gbGVmdDogNTAlOwogIC8vIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsLTUwJSk7CiAgLy8gYm9yZGVyLXJhZGl1czogMjBweDsKfQoKICAuY29udCB7CiAgLy8gYmFja2dyb3VuZC1pbWFnZTogdXJsKCJ+QC9hc3NldHMvYmFjay9sb2dpbi5wbmciKTsKICB3aWR0aDogNjAlOwogIH0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <v-container fill-height class=\"login mt-5\">\n      <v-row justify=\"center\">\n          <img src=\"../assets/img/sakura-card.png\" width=\"180\" height=\"180\">\n      </v-row>\n\n      <v-container class=\"cont\">\n        <v-form recontainerf=\"checkForm\">\n          <v-row>\n            <v-icon>\n              mdi-account\n            </v-icon>\n            <v-col>\n              <v-text-field\n              v-model=\"lastname\"\n              label=\"姓\"\n              outlined\n              filled\n              ></v-text-field>\n            </v-col>\n            <v-col>\n              <v-text-field\n              v-model=\"firstname\"\n              label=\"名\"\n              outlined\n              filled\n              ></v-text-field>\n            </v-col>\n          </v-row>\n          <v-row>\n            <v-icon>\n              mdi-email\n            </v-icon>\n            <v-col>\n              <v-text-field\n              v-model=\"email\"\n              label=\"メールアドレス\"\n              outlined\n              filled\n              ></v-text-field>\n            </v-col>\n          </v-row>\n          <v-row>    \n            <v-icon>\n              mdi-key\n            </v-icon>\n            <v-col>\n              <v-text-field\n              v-model=\"password\"\n              type=\"password\"\n              label=\"パスワード\"\n              outlined\n              filled\n              ></v-text-field>\n            </v-col>\n          </v-row>\n          <v-row class='mb-2'> \n            <v-col>\n              <v-btn @click=\"signUp\">新規登録</v-btn>\n            </v-col>\n            <v-col>\n              <v-btn @click=\"signIn\">ログイン</v-btn>\n            </v-col>\n          </v-row>\n        </v-form>\n      </v-container>\n    </v-container>\n</template>\n\n\n<script>\nimport axios from '@/api/index'\n\nexport default {\n  data() {\n    return {\n      firstname: \"\",\n      lastname: \"\",\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      title: \"\",\n      content: \"\",\n      tasks: [],\n      comment: \"\",\n      posts: [],\n      user: {},\n    };\n  },\n  methods: {\n    async signUp() {\n      this.name =this.lastname + \" \" +this.firstname\n      console.log(this.name)\n      await axios()\n        .post(\"/auth\", {\n          email: this.email,\n          password: this.password,\n        })\n        .then((response) => {\n          localStorage.setItem(\n            \"access-token\",\n            response.headers[\"access-token\"]\n          );\n          localStorage.setItem(\"client\", response.headers[\"client\"]);\n          localStorage.setItem(\"uid\", response.headers[\"uid\"]);\n          localStorage.setItem(\"id\", response.data.data[\"id\"]);\n          this.user = {\n            uid: response.headers[\"uid\"],\n            \"access-token\": response.headers[\"access-token\"],\n            client: response.headers[\"client\"],\n            id: response.data.data[\"id\"],\n          },\n        \n          console.log(this.user),\n          this.$store.dispatch('userLogin', this.user)\n          this.$store.commit('setMessage', {\n          status: false,\n        })\n        }\n        );\n      this.id = localStorage.getItem('id')\n      console.log(this.id)\n      await axios().put('/users/' + this.id, {\n        email: this.email,\n        password: this.password,\n        name: this.name\n      },\n      {\n        headers: {\n           'access-token': localStorage.getItem('access-token'),\n            uid: localStorage.getItem('uid'),\n            client: localStorage.getItem('client'),\n          },\n      }\n      )\n      if (this.email == localStorage.getItem(\"uid\")){\n            this.$router.push({name: 'Home'})\n      }\n    },\n    signIn() {\n      console.log(this.email);\n      console.log(this.password);\n      axios()\n        .post(\"/auth/sign_in\", {\n          email: this.email,\n          password: this.password,\n        })\n        .then((response) => {\n          localStorage.setItem(\n            \"access-token\",\n            response.headers[\"access-token\"]\n          );\n          localStorage.setItem(\"client\", response.headers[\"client\"]);\n          localStorage.setItem(\"uid\", response.headers[\"uid\"]);\n          localStorage.setItem(\"id\", response.data.data[\"id\"]);\n          this.user = {\n            uid: response.headers[\"uid\"],\n            \"access-token\": response.headers[\"access-token\"],\n            client: response.headers[\"client\"],\n          },\n          this.$store.dispatch('userLogin', this.user)\n          this.$store.commit('setMessage', {\n          status: false,\n        })\n          if (this.email == response.headers[\"uid\"]){\n            this.$router.push({name: 'Home'})\n          }\n        });    \n    },\n    \n  },\n};\n</script>\n\n<style  lang=\"scss\" scoped>\n.login {\n  background-image: url(\"~@/assets/back/login.png\");\n  background-size: 95% 95%;\n  font-family: \"Arial Rounded MT Bold\", \"Helvetica Rounded\", Arial, sans-serif;\n  text-transform: uppercase;\n  // display: block;\n  // font-size: 92px;\n  // color: #f1ebe5;\n  // text-shadow: 0 8px 9px #c4b59d, 0px -2px 1px #fff;\n  // font-weight: bold;\n  // letter-spacing: -4px;\n  // text-align: center;\n  // position: absolute;\n  // padding: 300px 300px;\n  // top: 15%;\n  // left: 50%;\n  // transform: translate(-50%,-50%);\n  // border-radius: 20px;\n}\n\n  .cont {\n  // background-image: url(\"~@/assets/back/login.png\");\n  width: 60%;\n  }\n</style>\n"]}]}