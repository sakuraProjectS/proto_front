{"remainingRequest":"/Users/ohirashunpei/project/sakura-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ohirashunpei/project/sakura-front/src/views/Sending.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ohirashunpei/project/sakura-front/src/views/Sending.vue","mtime":1625392547213},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdAL2FwaS9pbmRleCcKCnZhciBqYXBhbmVzZVRpbWUgPSAnJwp2YXIgamFwYW5lc2VUaW1lMiA9ICcnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhOiAoKSA9PiAoewogICAgICBtZXNzYWdlczogW10sCiAgICAgIGRpYWxvZzogZmFsc2UsCiAgICAgIHJhaWxzVVJMOiAiaHR0cDovL2xvY2FsaG9zdDozMDAwIiwKICAgICAgdXNlcl9uYW1lczogW10sCiAgICAgIHVzZXJzOiBbXSwKICAgICAgYXZhdGFyX3VybHM6IFtdLAogICAgfSksCiAgICBtZXRob2RzOiB7CiAgICAgICAKICAgIH0sCiAgICBhc3luYyBtb3VudGVkKCkgewogICAgICBhd2FpdCBheGlvcygpCiAgICAgICAgLmdldCgnL3NlbmRpbmcvJyAsewogICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAnYWNjZXNzLXRva2VuJzogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FjY2Vzcy10b2tlbicpLAogICAgICAgICAgICAgIHVpZDogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VpZCcpLAogICAgICAgICAgICAgIGNsaWVudDogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NsaWVudCcpLAogICAgICAgICAgfSwKICAgICAgICB9LAogICAgICAgICkKICAgICAgICAudGhlbihyZXNwb25zZSA9PiAoCiAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSksCiAgICAgICAgICB0aGlzLm1lc3NhZ2VzID0gcmVzcG9uc2UuZGF0YS5tZXNzYWdlcywKICAgICAgICAgIHRoaXMubWVzc2FnZXMuZm9yRWFjaChtZXNzYWdlID0+CiAgICAgICAgICAgICgKICAgICAgICAgICAgamFwYW5lc2VUaW1lID0gbmV3IERhdGUobWVzc2FnZS50aW1lICogMTAwMCksCiAgICAgICAgICAgIG1lc3NhZ2UudGltZSA9IGphcGFuZXNlVGltZS5nZXRGdWxsWWVhcigpCiAgICAgICAgICAgICsgJy8nICsgKCcwJyArIChqYXBhbmVzZVRpbWUuZ2V0TW9udGgoKSArIDEpKS5zbGljZSgtMikKICAgICAgICAgICAgKyAnLycgKyAoJzAnICsgamFwYW5lc2VUaW1lLmdldERhdGUoKSkuc2xpY2UoLTIpCiAgICAgICAgICAgICsgJyAnICsgKCcwJyArIGphcGFuZXNlVGltZS5nZXRIb3VycygpKS5zbGljZSgtMikKICAgICAgICAgICAgKyAnOicgKyAoJzAnICsgamFwYW5lc2VUaW1lLmdldE1pbnV0ZXMoKSkuc2xpY2UoLTIpLAogICAgICAgICAgICBqYXBhbmVzZVRpbWUyID0gbmV3IERhdGUobWVzc2FnZS5jcmVhdGVkX3RpbWUgKiAxMDAwKSwKICAgICAgICAgICAgbWVzc2FnZS5jcmVhdGVkX3RpbWUgPSBqYXBhbmVzZVRpbWUyLmdldEZ1bGxZZWFyKCkKICAgICAgICAgICAgICAgICsgJy8nICsgKCcwJyArIChqYXBhbmVzZVRpbWUyLmdldE1vbnRoKCkgKyAxKSkuc2xpY2UoLTIpCiAgICAgICAgICAgICAgICArICcvJyArICgnMCcgKyBqYXBhbmVzZVRpbWUyLmdldERhdGUoKSkuc2xpY2UoLTIpCiAgICAgICAgICAgICAgICArICcgJyArICgnMCcgKyBqYXBhbmVzZVRpbWUyLmdldEhvdXJzKCkpLnNsaWNlKC0yKQogICAgICAgICAgICAgICAgKyAnOicgKyAoJzAnICsgamFwYW5lc2VUaW1lMi5nZXRNaW51dGVzKCkpLnNsaWNlKC0yKQogICAgICAgICAgKSksCiAgICAgICAgICB0aGlzLnVzZXJzID0gcmVzcG9uc2UuZGF0YS51c2VycwogICAgICAgICkpOwogICAgICAgIHRoaXMudXNlcnMuZm9yRWFjaCh1c2VyID0+CiAgICAgICAgICBheGlvcygpCiAgICAgICAgICAgIC5nZXQoJ3VzZXJzLycgKyB1c2VyLmlkICx7CiAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgJ2FjY2Vzcy10b2tlbic6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY2Nlc3MtdG9rZW4nKSwKICAgICAgICAgICAgICAgICAgdWlkOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndWlkJyksCiAgICAgICAgICAgICAgICAgIGNsaWVudDogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NsaWVudCcpLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0pLnRoZW4ocmVzcG9uc2U9PiAoCiAgICAgICAgICAgICAgICB0aGlzLnVzZXJfbmFtZXMucHVzaChyZXNwb25zZS5kYXRhLm5hbWUpLAogICAgICAgICAgICAgICAgdGhpcy5hdmF0YXJfdXJscy5wdXNoKHJlc3BvbnNlLmRhdGEuYXZhdGFyX3VybCkKICAgICAgICAgICAgKSkgICAgCiAgICAgICAgKTsKICAgIH0KICB9Cgo="},{"version":3,"sources":["Sending.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Sending.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <v-container>\n        <v-list-item\n            v-for=\"(message, index) in messages\"\n            :key=\"message.time\"\n        >\n            <v-card\n                height=\"100\"\n                width=\"800\"\n            >\n                <v-row>\n                    <v-col cols='3'>\n                        <v-avatar> \n                            <img\n                            :src=\"railsURL + avatar_urls[index]\"\n                            >\n                        </v-avatar> \n                    </v-col>\n                    <v-col cols='9'>\n                    {{user_names[index]}}さんからメッセージが届きます\n                    </v-col>\n                </v-row>\n            </v-card>\n        </v-list-item>\n    </v-container>\n</template>\n\n<script>\nimport axios from '@/api/index'\n\nvar japaneseTime = ''\nvar japaneseTime2 = ''\n\nexport default {\n    data: () => ({\n      messages: [],\n      dialog: false,\n      railsURL: \"http://localhost:3000\",\n      user_names: [],\n      users: [],\n      avatar_urls: [],\n    }),\n    methods: {\n       \n    },\n    async mounted() {\n      await axios()\n        .get('/sending/' ,{\n          headers: {\n            'access-token': localStorage.getItem('access-token'),\n              uid: localStorage.getItem('uid'),\n              client: localStorage.getItem('client'),\n          },\n        },\n        )\n        .then(response => (\n          console.log(response),\n          this.messages = response.data.messages,\n          this.messages.forEach(message =>\n            (\n            japaneseTime = new Date(message.time * 1000),\n            message.time = japaneseTime.getFullYear()\n            + '/' + ('0' + (japaneseTime.getMonth() + 1)).slice(-2)\n            + '/' + ('0' + japaneseTime.getDate()).slice(-2)\n            + ' ' + ('0' + japaneseTime.getHours()).slice(-2)\n            + ':' + ('0' + japaneseTime.getMinutes()).slice(-2),\n            japaneseTime2 = new Date(message.created_time * 1000),\n            message.created_time = japaneseTime2.getFullYear()\n                + '/' + ('0' + (japaneseTime2.getMonth() + 1)).slice(-2)\n                + '/' + ('0' + japaneseTime2.getDate()).slice(-2)\n                + ' ' + ('0' + japaneseTime2.getHours()).slice(-2)\n                + ':' + ('0' + japaneseTime2.getMinutes()).slice(-2)\n          )),\n          this.users = response.data.users\n        ));\n        this.users.forEach(user =>\n          axios()\n            .get('users/' + user.id ,{\n              headers: {\n                'access-token': localStorage.getItem('access-token'),\n                  uid: localStorage.getItem('uid'),\n                  client: localStorage.getItem('client'),\n              },\n            }).then(response=> (\n                this.user_names.push(response.data.name),\n                this.avatar_urls.push(response.data.avatar_url)\n            ))    \n        );\n    }\n  }\n\n</script>\n"]}]}