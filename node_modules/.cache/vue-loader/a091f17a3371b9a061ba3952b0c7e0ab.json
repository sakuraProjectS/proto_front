{"remainingRequest":"/Users/ohirashunpei/project/sakura-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ohirashunpei/project/sakura-front/src/views/Sending.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ohirashunpei/project/sakura-front/src/views/Sending.vue","mtime":1627004413721},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdAL2FwaS9pbmRleCcKCnZhciBqYXBhbmVzZVRpbWUgPSAnJwp2YXIgamFwYW5lc2VUaW1lMiA9ICcnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhOiAoKSA9PiAoewogICAgICBtZXNzYWdlczogW10sCiAgICAgIGRpYWxvZzogZmFsc2UsCiAgICAgIC8vIHJhaWxzVVJMOiAnaHR0cHM6Ly8xMy4xMTQuNDMuMjI2JywKICAgICAgcmFpbHNVUkw6ICJodHRwOi8vbG9jYWxob3N0OjMwMDAiLAogICAgICB1c2VyX25hbWVzOiBbXSwKICAgICAgdXNlcnM6IFtdLAogICAgICBhdmF0YXJfdXJsczogW10sCiAgICB9KSwKICAgIG1ldGhvZHM6IHsKICAgICAgIAogICAgfSwKICAgIGFzeW5jIG1vdW50ZWQoKSB7CiAgICAgIGF3YWl0IGF4aW9zKCkKICAgICAgICAuZ2V0KCcvc2VuZGluZy8nICx7CiAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICdhY2Nlc3MtdG9rZW4nOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYWNjZXNzLXRva2VuJyksCiAgICAgICAgICAgICAgdWlkOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndWlkJyksCiAgICAgICAgICAgICAgY2xpZW50OiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY2xpZW50JyksCiAgICAgICAgICB9LAogICAgICAgIH0sCiAgICAgICAgKQogICAgICAgIC50aGVuKHJlc3BvbnNlID0+ICgKICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKSwKICAgICAgICAgIHRoaXMubWVzc2FnZXMgPSByZXNwb25zZS5kYXRhLm1lc3NhZ2VzLAogICAgICAgICAgdGhpcy5tZXNzYWdlcy5mb3JFYWNoKG1lc3NhZ2UgPT4KICAgICAgICAgICAgKAogICAgICAgICAgICBqYXBhbmVzZVRpbWUgPSBuZXcgRGF0ZShtZXNzYWdlLnRpbWUgKiAxMDAwKSwKICAgICAgICAgICAgbWVzc2FnZS50aW1lID0gamFwYW5lc2VUaW1lLmdldEZ1bGxZZWFyKCkKICAgICAgICAgICAgKyAnLycgKyAoJzAnICsgKGphcGFuZXNlVGltZS5nZXRNb250aCgpICsgMSkpLnNsaWNlKC0yKQogICAgICAgICAgICArICcvJyArICgnMCcgKyBqYXBhbmVzZVRpbWUuZ2V0RGF0ZSgpKS5zbGljZSgtMikKICAgICAgICAgICAgKyAnICcgKyAoJzAnICsgamFwYW5lc2VUaW1lLmdldEhvdXJzKCkpLnNsaWNlKC0yKQogICAgICAgICAgICArICc6JyArICgnMCcgKyBqYXBhbmVzZVRpbWUuZ2V0TWludXRlcygpKS5zbGljZSgtMiksCiAgICAgICAgICAgIGphcGFuZXNlVGltZTIgPSBuZXcgRGF0ZShtZXNzYWdlLmNyZWF0ZWRfdGltZSAqIDEwMDApLAogICAgICAgICAgICBtZXNzYWdlLmNyZWF0ZWRfdGltZSA9IGphcGFuZXNlVGltZTIuZ2V0RnVsbFllYXIoKQogICAgICAgICAgICAgICAgKyAnLycgKyAoJzAnICsgKGphcGFuZXNlVGltZTIuZ2V0TW9udGgoKSArIDEpKS5zbGljZSgtMikKICAgICAgICAgICAgICAgICsgJy8nICsgKCcwJyArIGphcGFuZXNlVGltZTIuZ2V0RGF0ZSgpKS5zbGljZSgtMikKICAgICAgICAgICAgICAgICsgJyAnICsgKCcwJyArIGphcGFuZXNlVGltZTIuZ2V0SG91cnMoKSkuc2xpY2UoLTIpCiAgICAgICAgICAgICAgICArICc6JyArICgnMCcgKyBqYXBhbmVzZVRpbWUyLmdldE1pbnV0ZXMoKSkuc2xpY2UoLTIpCiAgICAgICAgICApKSwKICAgICAgICAgIHRoaXMudXNlcnMgPSByZXNwb25zZS5kYXRhLnVzZXJzCiAgICAgICAgKSk7CiAgICAgICAgdGhpcy51c2Vycy5mb3JFYWNoKHVzZXIgPT4KICAgICAgICAgIGF4aW9zKCkKICAgICAgICAgICAgLmdldCgndXNlcnMvJyArIHVzZXIuaWQgLHsKICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAnYWNjZXNzLXRva2VuJzogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2FjY2Vzcy10b2tlbicpLAogICAgICAgICAgICAgICAgICB1aWQ6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1aWQnKSwKICAgICAgICAgICAgICAgICAgY2xpZW50OiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY2xpZW50JyksCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSkudGhlbihyZXNwb25zZT0+ICgKICAgICAgICAgICAgICAgIHRoaXMudXNlcl9uYW1lcy5wdXNoKHJlc3BvbnNlLmRhdGEubmFtZSksCiAgICAgICAgICAgICAgICB0aGlzLmF2YXRhcl91cmxzLnB1c2gocmVzcG9uc2UuZGF0YS5hdmF0YXJfdXJsKQogICAgICAgICAgICApKSAgICAKICAgICAgICApOwogICAgfQogIH0KCg=="},{"version":3,"sources":["Sending.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Sending.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <v-container>\n        <v-list-item\n            v-for=\"(message, index) in messages\"\n            :key=\"message.time\"\n        >\n            <v-card\n                height=\"100\"\n                width=\"800\"\n            >\n                <v-row>\n                    <v-col cols='3'>\n                        <v-avatar> \n                            <img\n                            :src=\"railsURL + avatar_urls[index]\"\n                            >\n                        </v-avatar> \n                    </v-col>\n                    <v-col cols='9'>\n                    {{user_names[index]}}さんからメッセージが届きます\n                    </v-col>\n                </v-row>\n            </v-card>\n        </v-list-item>\n    </v-container>\n</template>\n\n<script>\nimport axios from '@/api/index'\n\nvar japaneseTime = ''\nvar japaneseTime2 = ''\n\nexport default {\n    data: () => ({\n      messages: [],\n      dialog: false,\n      // railsURL: 'https://13.114.43.226',\n      railsURL: \"http://localhost:3000\",\n      user_names: [],\n      users: [],\n      avatar_urls: [],\n    }),\n    methods: {\n       \n    },\n    async mounted() {\n      await axios()\n        .get('/sending/' ,{\n          headers: {\n            'access-token': localStorage.getItem('access-token'),\n              uid: localStorage.getItem('uid'),\n              client: localStorage.getItem('client'),\n          },\n        },\n        )\n        .then(response => (\n          console.log(response),\n          this.messages = response.data.messages,\n          this.messages.forEach(message =>\n            (\n            japaneseTime = new Date(message.time * 1000),\n            message.time = japaneseTime.getFullYear()\n            + '/' + ('0' + (japaneseTime.getMonth() + 1)).slice(-2)\n            + '/' + ('0' + japaneseTime.getDate()).slice(-2)\n            + ' ' + ('0' + japaneseTime.getHours()).slice(-2)\n            + ':' + ('0' + japaneseTime.getMinutes()).slice(-2),\n            japaneseTime2 = new Date(message.created_time * 1000),\n            message.created_time = japaneseTime2.getFullYear()\n                + '/' + ('0' + (japaneseTime2.getMonth() + 1)).slice(-2)\n                + '/' + ('0' + japaneseTime2.getDate()).slice(-2)\n                + ' ' + ('0' + japaneseTime2.getHours()).slice(-2)\n                + ':' + ('0' + japaneseTime2.getMinutes()).slice(-2)\n          )),\n          this.users = response.data.users\n        ));\n        this.users.forEach(user =>\n          axios()\n            .get('users/' + user.id ,{\n              headers: {\n                'access-token': localStorage.getItem('access-token'),\n                  uid: localStorage.getItem('uid'),\n                  client: localStorage.getItem('client'),\n              },\n            }).then(response=> (\n                this.user_names.push(response.data.name),\n                this.avatar_urls.push(response.data.avatar_url)\n            ))    \n        );\n    }\n  }\n\n</script>\n"]}]}