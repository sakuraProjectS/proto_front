{"remainingRequest":"/Users/ohirashunpei/project/sakura-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ohirashunpei/project/sakura-front/src/views/MessageContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ohirashunpei/project/sakura-front/src/views/MessageContent.vue","mtime":1627250779169},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/sakura-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdAL2FwaS9pbmRleCcKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4Jwp2YXIgamFwYW5lc2VUaW1lID0gJycKdmFyIGphcGFuZXNlVGltZTIgPSAnJwoKZXhwb3J0IGRlZmF1bHQgewogICAgZGF0YTogKCkgPT4gKHsKICAgICAgbWVzc2FnZV9pZDogJycsCiAgICAgIG1lc3NhZ2U6IHt9LAogICAgICB1cGxvYWRlZEltYWdlOiAnJywKICAgICAgLy8gcmFpbHNVUkw6ICJodHRwOi8vbG9jYWxob3N0OjMwMDAiLAogICAgICByYWlsc1VSTDogJ2h0dHBzOi8vNTQuMTY4LjM1LjIxNCcsCiAgICAgIGF2YXRhcjogJycsCiAgICAgIGZyb21fbmFtZTogJycKICAgIH0pLAogICAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKFsidXNlcl9pbmZvIl0pLAogICAgfSwKICAgIGNyZWF0ZWQoKXsKICAgICAgICB0aGlzLm1lc3NhZ2VfaWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMubWVzc2FnZV9pZCwKICAgICAgICB0aGlzLmF2YXRhciA9IHRoaXMuJHJvdXRlLnBhcmFtcy5hdmF0YXJfdXJsLAogICAgICAgIHRoaXMuZnJvbV9uYW1lID0gdGhpcy4kcm91dGUucGFyYW1zLmZyb21fbmFtZQogICAgfSwKICAgIG1vdW50ZWQoKSB7IAogICAgICBheGlvcygpCiAgICAgICAgLmdldCgnL3VzZXJzLycgKyB0aGlzLnVzZXJfaW5mb1snaWQnXSArICcvbWVzc2FnZXMvJyArIHRoaXMubWVzc2FnZV9pZCwKICAgICAgICB7CiAgICAgICAgICBoZWFkZXJzOiB0aGlzLnVzZXJfaW5mbwogICAgICAgIH0sCiAgICAgICAgKQogICAgICAgIC50aGVuKHJlc3BvbnNlID0+ICgKICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSByZXNwb25zZS5kYXRhLAogICAgICAgICAgICAgIGphcGFuZXNlVGltZSA9IG5ldyBEYXRlKHRoaXMubWVzc2FnZS50aW1lICogMTAwMCksCiAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlLnRpbWUgPSBqYXBhbmVzZVRpbWUuZ2V0RnVsbFllYXIoKQogICAgICAgICAgICAgICAgICArICcvJyArICgnMCcgKyAoamFwYW5lc2VUaW1lLmdldE1vbnRoKCkgKyAxKSkuc2xpY2UoLTIpCiAgICAgICAgICAgICAgICAgICsgJy8nICsgKCcwJyArIGphcGFuZXNlVGltZS5nZXREYXRlKCkpLnNsaWNlKC0yKQogICAgICAgICAgICAgICAgICArICcgJyArICgnMCcgKyBqYXBhbmVzZVRpbWUuZ2V0SG91cnMoKSkuc2xpY2UoLTIpCiAgICAgICAgICAgICAgICAgICsgJzonICsgKCcwJyArIGphcGFuZXNlVGltZS5nZXRNaW51dGVzKCkpLnNsaWNlKC0yKSwKICAgICAgICAgICAgICBqYXBhbmVzZVRpbWUyID0gbmV3IERhdGUodGhpcy5tZXNzYWdlLmNyZWF0ZWRfdGltZSAqIDEwMDApLAogICAgICAgICAgICAgIHRoaXMubWVzc2FnZS5jcmVhdGVkX3RpbWUgPSBqYXBhbmVzZVRpbWUyLmdldEZ1bGxZZWFyKCkKICAgICAgICAgICAgICAgICAgKyAnLycgKyAoJzAnICsgKGphcGFuZXNlVGltZTIuZ2V0TW9udGgoKSArIDEpKS5zbGljZSgtMikKICAgICAgICAgICAgICAgICAgKyAnLycgKyAoJzAnICsgamFwYW5lc2VUaW1lMi5nZXREYXRlKCkpLnNsaWNlKC0yKQogICAgICAgICAgICAgICAgICArICcgJyArICgnMCcgKyBqYXBhbmVzZVRpbWUyLmdldEhvdXJzKCkpLnNsaWNlKC0yKQogICAgICAgICAgICAgICAgICArICc6JyArICgnMCcgKyBqYXBhbmVzZVRpbWUyLmdldE1pbnV0ZXMoKSkuc2xpY2UoLTIpCiAgICApKQogIH0sCiAgbWV0aG9kczogewogICAgIHJldHVyblBhZ2UoKXsKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7bmFtZTogJ1RpbWVMaW5lJ30pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["MessageContent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MessageContent.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <v-container>\n      <v-row class='mt-3 ml-3'><p class=\"text-h6\"> メッセージ </p></v-row>\n        <v-row class='mr-2 mt-0 mb-0'>\n            <v-col cols='1'>\n                <v-btn icon @click='returnPage'>\n                <v-icon>\n                    mdi-arrow-left-thick\n                </v-icon>\n                </v-btn>\n            </v-col>\n      </v-row>\n      <v-divider class='mt-0'/>\n      <v-layout wrap class='mt-0'>\n      <v-flex xs=12 sm=10 md =6>\n        <v-card height='550' rounded=\"xl\" class='mt-3'>\n        <v-container fluid>\n          <v-row class='mt-1'>\n              <v-col class='mt-3 ml-1' cols='2'>\n                  <v-img \n                  :src=\"railsURL + avatar\"\n                  style=\"object-fit: cover;\"\n                  max-height=\"50\"\n                  max-width=\"40\"\n                  > \n                  </v-img>\n              </v-col>\n              <v-col> <v-divider vertical/> </v-col>\n              <v-col cols='9' class='ml-0'>\n                <v-row class='text-h8'>\n                  {{from_name}}\n                </v-row>\n                <v-row class='text-caption'>\n                  {{message.title}}\n                </v-row>\n                <v-row justify=\"center\" class='text-overline ma-0 pa-0'> \n                  {{message.time}}\n                </v-row>\n                <v-row justify=\"center\" class='text-overline ma-0 pa-0'>\n                  <v-icon> mdi-arrow-up </v-icon>\n                </v-row>\n                <v-row justify=\"center\" class='text-overline ma-0 pa-0'>\n                  {{message.created_time}}\n                </v-row>\n              </v-col>\n            </v-row>\n          <v-divider class='mt-1'/>\n          <v-row class='mt-5 ml-2 mr-2'>\n            {{message.body}}  \n          </v-row>\n          <v-row class='mt-10 ml-2 mr-2'>\n            <v-img\n                v-bind:src=\"railsURL + message.image_url\"\n                height=\"100\"\n                width=\"100\"\n            >\n            </v-img>\n          </v-row>\n          </v-container>\n        </v-card>\n      </v-flex>\n      </v-layout>\n    </v-container>\n</template>\n\n<script>\nimport axios from '@/api/index'\nimport { mapState } from 'vuex'\nvar japaneseTime = ''\nvar japaneseTime2 = ''\n\nexport default {\n    data: () => ({\n      message_id: '',\n      message: {},\n      uploadedImage: '',\n      // railsURL: \"http://localhost:3000\",\n      railsURL: 'https://54.168.35.214',\n      avatar: '',\n      from_name: ''\n    }),\n    computed: {\n    ...mapState([\"user_info\"]),\n    },\n    created(){\n        this.message_id = this.$route.params.message_id,\n        this.avatar = this.$route.params.avatar_url,\n        this.from_name = this.$route.params.from_name\n    },\n    mounted() { \n      axios()\n        .get('/users/' + this.user_info['id'] + '/messages/' + this.message_id,\n        {\n          headers: this.user_info\n        },\n        )\n        .then(response => (\n              this.message = response.data,\n              japaneseTime = new Date(this.message.time * 1000),\n              this.message.time = japaneseTime.getFullYear()\n                  + '/' + ('0' + (japaneseTime.getMonth() + 1)).slice(-2)\n                  + '/' + ('0' + japaneseTime.getDate()).slice(-2)\n                  + ' ' + ('0' + japaneseTime.getHours()).slice(-2)\n                  + ':' + ('0' + japaneseTime.getMinutes()).slice(-2),\n              japaneseTime2 = new Date(this.message.created_time * 1000),\n              this.message.created_time = japaneseTime2.getFullYear()\n                  + '/' + ('0' + (japaneseTime2.getMonth() + 1)).slice(-2)\n                  + '/' + ('0' + japaneseTime2.getDate()).slice(-2)\n                  + ' ' + ('0' + japaneseTime2.getHours()).slice(-2)\n                  + ':' + ('0' + japaneseTime2.getMinutes()).slice(-2)\n    ))\n  },\n  methods: {\n     returnPage(){\n        this.$router.push({name: 'TimeLine'})\n    }\n  }\n}\n</script>"]}]}