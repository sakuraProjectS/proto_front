{"remainingRequest":"/Users/ohirashunpei/project/proto_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ohirashunpei/project/proto_front/src/views/SendMessage.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/ohirashunpei/project/proto_front/src/views/SendMessage.vue","mtime":1625374744391},{"path":"/Users/ohirashunpei/project/proto_front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/proto_front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/proto_front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/proto_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ohirashunpei/project/proto_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubSB7CiAgbWFyZ2luLXRvcDogMTBweDsKfQo="},{"version":3,"sources":["SendMessage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwMA;AACA;AACA","file":"SendMessage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container>\n    <v-row justify=\"center\" class='mt-10'>\n      <v-col cols=\"2\">\n        <v-avatar size='100'>\n            <img src=\"~@/assets/icon/cat.jpg\">\n        </v-avatar>\n      </v-col>\n      <v-col cols=\"5\">\n        <div class='text-h4'>\n        <v-text-field\n          outlined\n          v-model=\"title\"\n          label=\"件名\"\n        ></v-text-field>\n        </div>\n        <v-row>\n          <v-col>\n            <v-select\n              v-model=\"year\"\n              :items=\"yearrange\"\n              label=\"年\"\n            ></v-select>\n          </v-col>\n        \n          <v-col>\n            <v-select\n              v-model=\"month\"\n              :items=\"monthrange\"\n              label=\"月\"\n            ></v-select>\n          </v-col>\n          <v-col>\n            <v-select\n              v-model=\"day\"\n              :items=\"daysrange\"\n              label=\"日\"\n            ></v-select>\n          </v-col>\n          <v-col>\n            <v-select\n              v-model=\"hour\"\n              :items=\"hoursrange\"\n              label=\"時\"\n            ></v-select>\n          </v-col>\n          <v-col>\n            <v-select\n              v-model=\"minute\"\n              :items=\"minutesrange\"\n              label=\"分\"\n            ></v-select>\n          </v-col>\n        </v-row>\n    </v-col>\n\n    <v-col>\n          <p>\n            <label>画像</label>\n            <input name=\"uploadedImage\" type=\"file\" ref=\"file\" accept=\"image/png, image/jpeg\" @change=\"onFileChange\"><br />\n            <!-- <v-btn @click='postItem'>\n                アップロード\n            </v-btn> -->\n        </p>\n    </v-col>\n    \n            \n</v-row>\n\n    <v-row>\n        <v-container fluid>\n          <v-textarea\n            v-model='body'\n            counter\n            label=\"メッセージ\"\n            height=\"300\"\n            :value=\"value\"\n            outlined\n          ></v-textarea>\n        </v-container>\n    </v-row>\n  \n    <v-row justify=\"end\">\n      <v-card-actions>\n        <v-btn outlined text v-on:click=\"sendMessage\">送信する</v-btn>\n        <!-- <span v-if=\"suceess\">送信成功</span> -->\n      </v-card-actions> \n      <!-- /送信ボタン -->\n    </v-row>\n  \n  </v-container>\n</template>\n\n\n<script>\n// import AppBackgroundHolder from '../components/AppBackgroundHolder.vue'\nimport axios from '@/api/index'\nimport { mapState } from 'vuex'\n\n\nconst year_start = 2021\nconst year_end = 2100\nconst ageRange = new Array(year_end - year_start + 1).fill(null).map((_, i) => i + year_start)\nconst month_start = 1\nconst month_end = 12\nconst monthRange = new Array(month_end - month_start + 1).fill(null).map((_, i) => i + month_start)\nconst day_start = 1\nconst day_end = 31\nconst daysRange = new Array(day_end - day_start + 1).fill(null).map((_, i) => i + day_start)\nconst hoursRange = [...Array(24)].map((_, i) => i) \nconst minutesRange = [...Array(60).keys()]\n\nexport default {\n  props: ['to_id'],\n  data () {\n    return {\n      head: 'メッセージ送信',\n      // rules: [v => v.length <= 25 || 'Max 25 characters'],\n      value: null,\n      item_minutes: [\n        '0',\n        '1',\n        '2',\n        '3',\n        '4',\n        '5'\n      ],\n      user: [],\n      select: '',\n      to: '',\n      body: '',\n      year: '2021',\n      yearrange: ageRange,\n      month: '6',\n      monthrange: monthRange,\n      day: '3',\n      daysrange: daysRange,\n      hour: '',\n      hoursrange: hoursRange,\n      minute: '',\n      minutesrange: minutesRange,\n      time: [],\n      title: [],\n      message: {},\n      uploadedImage: '',\n      railsURL: \"http://localhost:3000\"\n    }\n  },\n  computed: {\n    ...mapState(['user_token'],),\n  },\n  mounted() {\n    axios()\n      .get('/users/' + this.to_id,{\n        headers: {\n           'access-token': localStorage.getItem('access-token'),\n            uid: localStorage.getItem('uid'),\n            client: localStorage.getItem('client'),\n        },\n      },\n      console.log(this.user_token)\n      )\n      .then(response => (this.user = response.data , console.log(response)))\n  },\n  methods: {\n      sendMessage(){\n      var date = new Date(this.year, this.month - 1, this.day, this.hour, this.minute)\n      let formData = new FormData();\n      formData.append('image', this.uploadedImage);\n      formData.append('from_id', localStorage.getItem('id'));\n      formData.append('to_id', this.to_id);\n      formData.append('title', this.title);\n      formData.append('body', this.body);\n      formData.append('time', date.getTime() / 1000);\n      axios().post('/users/' + localStorage.getItem('id') + '/messages', formData, {\n        headers: {\n           'access-token': localStorage.getItem('access-token'),\n            uid: localStorage.getItem('uid'),\n            client: localStorage.getItem('client'),\n          },\n      }\n      )\n      .then(response => ( \n            console.log(response.data),\n            this.$router.push({name: 'Send'})\n        ))\n\n    },\n    onFileChange(e) {\n        e.preventDefault();\n        let files = e.target.files;\n        this.uploadedImage = files[0];\n        console.log(files)\n        console.log(this.uploadedImage)\n     }\n  },\n}\n</script>\n\n<style>\n  .m {\n    margin-top: 10px;\n  }\n</style>"]}]}